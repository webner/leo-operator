// +build !

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"github.com/webner/leo-operator/pkg/apis/operator/v1alpha1.LeoCertificate":       schema_pkg_apis_operator_v1alpha1_LeoCertificate(ref),
		"github.com/webner/leo-operator/pkg/apis/operator/v1alpha1.LeoCertificateSpec":   schema_pkg_apis_operator_v1alpha1_LeoCertificateSpec(ref),
		"github.com/webner/leo-operator/pkg/apis/operator/v1alpha1.LeoCertificateStatus": schema_pkg_apis_operator_v1alpha1_LeoCertificateStatus(ref),
		"github.com/webner/leo-operator/pkg/apis/operator/v1alpha1.LeoConfig":            schema_pkg_apis_operator_v1alpha1_LeoConfig(ref),
		"github.com/webner/leo-operator/pkg/apis/operator/v1alpha1.LeoConfigSpec":        schema_pkg_apis_operator_v1alpha1_LeoConfigSpec(ref),
		"github.com/webner/leo-operator/pkg/apis/operator/v1alpha1.LeoConfigStatus":      schema_pkg_apis_operator_v1alpha1_LeoConfigStatus(ref),
	}
}

func schema_pkg_apis_operator_v1alpha1_LeoCertificate(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "LeoCertificate is the Schema for the leocertificates API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/webner/leo-operator/pkg/apis/operator/v1alpha1.LeoCertificateSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/webner/leo-operator/pkg/apis/operator/v1alpha1.LeoCertificateStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/webner/leo-operator/pkg/apis/operator/v1alpha1.LeoCertificateSpec", "github.com/webner/leo-operator/pkg/apis/operator/v1alpha1.LeoCertificateStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_operator_v1alpha1_LeoCertificateSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "LeoCertificateSpec defines the desired state of LeoCertificate",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_operator_v1alpha1_LeoCertificateStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "LeoCertificateStatus defines the observed state of LeoCertificate",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_operator_v1alpha1_LeoConfig(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "LeoConfig is the Schema for the leoconfigs API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/webner/leo-operator/pkg/apis/operator/v1alpha1.LeoConfigSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/webner/leo-operator/pkg/apis/operator/v1alpha1.LeoConfigStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/webner/leo-operator/pkg/apis/operator/v1alpha1.LeoConfigSpec", "github.com/webner/leo-operator/pkg/apis/operator/v1alpha1.LeoConfigStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_operator_v1alpha1_LeoConfigSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "LeoConfigSpec defines the desired state of LeoConfig",
				Properties: map[string]spec.Schema{
					"production": {
						SchemaProps: spec.SchemaProps{
							Description: "INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run \"operator-sdk generate k8s\" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html",
							Type:        []string{"boolean"},
							Format:      "",
						},
					},
					"account": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/webner/leo-operator/pkg/apis/operator/v1alpha1.LeoAccount"),
						},
					},
					"provider": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/webner/leo-operator/pkg/apis/operator/v1alpha1.LeoProvider"),
						},
					},
				},
				Required: []string{"production", "provider"},
			},
		},
		Dependencies: []string{
			"github.com/webner/leo-operator/pkg/apis/operator/v1alpha1.LeoAccount", "github.com/webner/leo-operator/pkg/apis/operator/v1alpha1.LeoProvider"},
	}
}

func schema_pkg_apis_operator_v1alpha1_LeoConfigStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "LeoConfigStatus defines the observed state of LeoConfig",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}
